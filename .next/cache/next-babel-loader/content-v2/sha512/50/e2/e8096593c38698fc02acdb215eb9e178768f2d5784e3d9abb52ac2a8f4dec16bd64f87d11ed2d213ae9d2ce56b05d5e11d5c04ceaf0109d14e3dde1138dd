{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maximepalmino/Documents/02 - Personal/Playground_Dev/NextCourse/NextJS-Meet-up-App-Mongodb/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      img: \"\",\n      title: props.meetupData.title,\n      adress: props.meetupData.adress,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/maximepalmino/Documents/02 - Personal/Playground_Dev/NextCourse/NextJS-Meet-up-App-Mongodb/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","title","adress","description"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAG7B,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,GAAG,EAAC,EAAlB;AAAqB,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAA7C;AAAoD,MAAA,MAAM,EAAEF,KAAK,CAACC,UAAN,CAAiBE,MAA7E;AAAqF,MAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CARD;;KAAML,a;;AAkDN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\"\nimport { MongoClient } from 'client'\n\nconst MeetupDetails = (props) => {\n    \n\n    return(\n        <>\n            <MeetupDetail img='' title={props.meetupData.title} adress={props.meetupData.adress} description={props.meetupData.description} />\n        </>\n    )\n}\n\nexport async function getStaticPaths(context) {\n\n  const client = await MongoClient.connect('mongodb+srv://Maxime:6RN1OGFFw5mGPuTz@cluster0.wxoqi.mongodb.net/meetups?retryWrites=true&w=majority')\n  const meetupId = context.params\n  const db = client.db()\n  const meetupsCollection = db.collection('meetups')\n  const meetups = await meetupsCollection.find({}, { _id: 1}).toArray() \n  const selectedMeetups = meetupsCollection.findOne({_id: meetupId})\n  client.close()\n\n    return {\n    fallback: false,\n      paths: meetups.map((meetup) => ({\n        params: {\n          meetupId: meetup._id.toString()\n        } \n      }))\n    };\n  }\n\nexport async function getStaticProps(context) {\n// Fetch data for a single meetup\n\nconst meetupId = context.params.meetupId\nconsole.log(meetupId)\n\nreturn {\n    props: {\n        meetupData: {\n            img: '',\n            id: meetupId,\n            title: 'first meet up',\n            adress: 'adress',\n            description: 'description'\n\n        }\n    }\n}\n}\n\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}