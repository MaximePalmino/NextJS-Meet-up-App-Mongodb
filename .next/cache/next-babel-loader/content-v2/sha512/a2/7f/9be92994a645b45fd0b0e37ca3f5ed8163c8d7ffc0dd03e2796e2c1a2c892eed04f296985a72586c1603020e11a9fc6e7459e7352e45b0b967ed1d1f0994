{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/maximepalmino/Documents/02 - Personal/Playground_Dev/NextCourse/NextJS-Meet-up-App-Mongodb/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/maximepalmino/Documents/02 - Personal/Playground_Dev/NextCourse/NextJS-Meet-up-App-Mongodb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/maximepalmino/Documents/02 - Personal/Playground_Dev/NextCourse/NextJS-Meet-up-App-Mongodb/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  var deleteMeetupHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/new-meetup', {\n                method: 'POST',\n                body: JSON.stringify(enteredMeetUpDatas),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n              router.push('/');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function deleteMeetupHandler() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      img: props.meetupData.image,\n      title: props.meetupData.title,\n      adress: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/maximepalmino/Documents/02 - Personal/Playground_Dev/NextCourse/NextJS-Meet-up-App-Mongodb/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","deleteMeetupHandler","fetch","method","body","JSON","stringify","enteredMeetUpDatas","headers","response","json","data","console","log","router","push","meetupData","image","title","address","description"],"mappings":";;;;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAE/B,MAAMC,mBAAmB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEKC,KAAK,CAAC,iBAAD,EAAoB;AAC5CC,gBAAAA,MAAM,EAAE,MADoC;AAE5CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,kBAAf,CAFsC;AAG5CC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX;AAHmC,eAApB,CAFV;;AAAA;AAEZC,cAAAA,QAFY;AAAA;AAAA,qBASCA,QAAQ,CAACC,IAAT,EATD;;AAAA;AASZC,cAAAA,IATY;AAUlBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,cAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;;AAXkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBd,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAeE,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,GAAG,EAAED,KAAK,CAACgB,UAAN,CAAiBC,KAApC;AAA2C,MAAA,KAAK,EAAEjB,KAAK,CAACgB,UAAN,CAAiBE,KAAnE;AAA0E,MAAA,MAAM,EAAElB,KAAK,CAACgB,UAAN,CAAiBG,OAAnG;AAA4G,MAAA,WAAW,EAAEnB,KAAK,CAACgB,UAAN,CAAiBI;AAA1I;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAtBD;;KAAMrB,a;;AAkEN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\"\nimport { MongoClient, ObjectId} from 'mongodb'\n\nconst MeetupDetails = (props) => {\n\n  const deleteMeetupHandler = async () => {\n    // console.log(enteredMeetUpDatas)\n            const response = await fetch('/api/new-meetup', {\n                method: 'POST',\n                body: JSON.stringify(enteredMeetUpDatas),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            const data = await response.json()\n            console.log(data)\n            router.push('/')\n        }\n    \n\n    return(\n        <>\n            <MeetupDetail img={props.meetupData.image} title={props.meetupData.title} adress={props.meetupData.address} description={props.meetupData.description} />\n        </>\n    )\n}\n\nexport async function getStaticPaths() {\n\n  const client = await MongoClient.connect('mongodb+srv://Maxime:6RN1OGFFw5mGPuTz@cluster0.wxoqi.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db = client.db()\n  const meetupsCollection = db.collection('meetups')\n  const meetups = await meetupsCollection.find({}, { _id: 1}).toArray() \n  client.close()\n\n    return {\n    fallback: false,\n      paths: meetups.map((meetup) => ({\n        params: {\n          meetupId: meetup._id.toString()\n        } \n      }))\n    };\n  }\n\nexport async function getStaticProps(context) {\n// Fetch data for a single meetup\n\nconst meetupId = context.params.meetupId\nconst client = await MongoClient.connect('mongodb+srv://Maxime:6RN1OGFFw5mGPuTz@cluster0.wxoqi.mongodb.net/meetups?retryWrites=true&w=majority')\nconst db = client.db()\nconst meetupsCollection = db.collection('meetups')\nconst selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId) })\nconsole.log(selectedMeetup)\nclient.close()\n\nreturn {\n    props: {\n        meetupData: {\n          id: selectedMeetup._id.toString(),\n          title: selectedMeetup.title,\n          address: selectedMeetup.address,\n          image: selectedMeetup.image,\n          description: selectedMeetup.description\n        }\n    }\n}\n}\n\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}