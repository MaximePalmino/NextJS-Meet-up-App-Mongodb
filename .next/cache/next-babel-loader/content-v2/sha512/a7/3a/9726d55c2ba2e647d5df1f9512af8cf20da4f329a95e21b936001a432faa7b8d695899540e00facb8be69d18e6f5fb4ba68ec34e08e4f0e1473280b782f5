{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maximepalmino/Documents/02 - Personal/Playground_Dev/NextCourse/NextJS-Meet-up-App-Mongodb/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from 'client';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      img: \"\",\n      title: props.meetupData.title,\n      adress: props.meetupData.adress,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths(context) {\n  const client = await MongoClient.connect('mongodb+srv://Maxime:6RN1OGFFw5mGPuTz@cluster0.wxoqi.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // Fetch data for a single meetup\n  console.log(meetupId);\n  const client = await MongoClient.connect('mongodb+srv://Maxime:6RN1OGFFw5mGPuTz@cluster0.wxoqi.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupId = context.params.meetupId;\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  const selectedMeetups = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: {\n        img: '',\n        id: meetupId,\n        title: 'first meet up',\n        adress: 'adress',\n        description: 'description'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/maximepalmino/Documents/02 - Personal/Playground_Dev/NextCourse/NextJS-Meet-up-App-Mongodb/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","meetupData","title","adress","description","getStaticPaths","context","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","console","log","selectedMeetups","findOne","img","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAG7B,sBACI;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,GAAG,EAAC,EAAlB;AAAqB,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAA7C;AAAoD,MAAA,MAAM,EAAEF,KAAK,CAACC,UAAN,CAAiBE,MAA7E;AAAqF,MAAA,WAAW,EAAEH,KAAK,CAACC,UAAN,CAAiBG;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CARD;;AAUA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE5C,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,sGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAsCC,OAAtC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEE,SAAO;AACPC,IAAAA,QAAQ,EAAE,KADH;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAEH,OAAO,eAAeC,cAAf,CAA8BlB,OAA9B,EAAuC;AAC9C;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,sGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMa,QAAQ,GAAGhB,OAAO,CAACe,MAAR,CAAeC,QAAhC;AACA,QAAMZ,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAsCC,OAAtC,EAAtB;AACA,QAAMY,eAAe,GAAG,MAAMjB,iBAAiB,CAACkB,OAAlB,CAA0B;AAACd,IAAAA,GAAG,EAAEQ;AAAN,GAA1B,CAA9B;AAEA,SAAO;AACHtB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR4B,QAAAA,GAAG,EAAE,EADG;AAERC,QAAAA,EAAE,EAAER,QAFI;AAGRpB,QAAAA,KAAK,EAAE,eAHC;AAIRC,QAAAA,MAAM,EAAE,QAJA;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAYC;AAED,eAAeL,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\"\nimport { MongoClient } from 'client'\n\nconst MeetupDetails = (props) => {\n    \n\n    return(\n        <>\n            <MeetupDetail img='' title={props.meetupData.title} adress={props.meetupData.adress} description={props.meetupData.description} />\n        </>\n    )\n}\n\nexport async function getStaticPaths(context) {\n\n  const client = await MongoClient.connect('mongodb+srv://Maxime:6RN1OGFFw5mGPuTz@cluster0.wxoqi.mongodb.net/meetups?retryWrites=true&w=majority')\n  const db = client.db()\n  const meetupsCollection = db.collection('meetups')\n  const meetups = await meetupsCollection.find({}, { _id: 1}).toArray() \n  client.close()\n\n    return {\n    fallback: false,\n      paths: meetups.map((meetup) => ({\n        params: {\n          meetupId: meetup._id.toString()\n        } \n      }))\n    };\n  }\n\nexport async function getStaticProps(context) {\n// Fetch data for a single meetup\n\nconsole.log(meetupId)\nconst client = await MongoClient.connect('mongodb+srv://Maxime:6RN1OGFFw5mGPuTz@cluster0.wxoqi.mongodb.net/meetups?retryWrites=true&w=majority')\nconst db = client.db()\nconst meetupId = context.params.meetupId\nconst meetupsCollection = db.collection('meetups')\nconst meetups = await meetupsCollection.find({}, { _id: 1}).toArray() \nconst selectedMeetups = await meetupsCollection.findOne({_id: meetupId})\n\nreturn {\n    props: {\n        meetupData: {\n            img: '',\n            id: meetupId,\n            title: 'first meet up',\n            adress: 'adress',\n            description: 'description'\n\n        }\n    }\n}\n}\n\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}